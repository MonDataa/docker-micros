name: Docker Build and Push (Checksum Service)

on:
  # Déclencheur manuel pour exécuter à la demande
  workflow_dispatch:
  # Déclencheur automatique lors de changements dans 'checksum-service'
  push:
    paths:
      - 'checksum-service/**'
  pull_request:
    paths:
      - 'checksum-service/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python and install dependencies
      - name: Set up Python and install dependencies
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r checksum-service/requirements.txt

      # Step 3: Run linting
      - name: Run linting with flake8
        run: |
          pip install flake8
          flake8 checksum-service/app.py || true

      # Step 4: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.MonDataa }}
          password: ${{ secrets.docker_pro }}

      # Step 5: Normalize tag to lowercase
      - name: Normalize Docker tag
        id: tag
        run: |
          echo "TAG=ghcr.io/$(echo 'mondataa' | tr '[:upper:]' '[:lower:]')/docker-micros/checksum-service:latest" >> $GITHUB_ENV

      # Step 6: Build Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./checksum-service
          push: false
          tags: ${{ env.TAG }}

      # Step 7: Test Docker image locally
      - name: Test Docker image locally
        run: |
          docker run --rm ${{ env.TAG }} python --version

      # Step 8: Push Docker image
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./checksum-service
          push: true
          tags: ${{ env.TAG }}

